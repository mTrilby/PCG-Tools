@page "/OpenPcgFile"
@using Domain.Common.File
@using PcgTools_Blazor.Components
<PageTitle>PcgFile</PageTitle>
@if (!_files.Any())
{
    <MudFileUpload T="IBrowserFile" FilesChanged="UploadFiles">
        <ButtonTemplate>
            <MudButton HtmlTag="label"
                       Variant="Variant.Filled"
                       Color="Color.Primary"
                       StartIcon="@Icons.Filled.FileOpen"
                       for="@context">
                Load *.PCG / *.SNG File(s)
            </MudButton>
        </ButtonTemplate>
    </MudFileUpload>
}

@if (_files.Any())
{
    @* TODO: Need to actually load the PCG/SNG file and display the internal details *@
    <MudText Typo="@Typo.h6">@_files.Count() File@(_files.Count() == 1 ? "" : "s"):</MudText>
    <MudList>
        @foreach (var file in _files)
        {
            <MudListItem Icon="@Icons.Filled.AttachFile" @key="@file">
                @file.Name (@file.Info) <code>@file.Size bytes</code> [@file.LastModified]
            </MudListItem>
        }
    </MudList>
}
@code
{
    readonly IList<PcgToolsFileInfo> _files = new List<PcgToolsFileInfo>();
    private long maxFileSize = 1024 * 1024 * 50;

    private async Task UploadFiles(IBrowserFile file)
    {
        _files.Clear();
        var fileInfo = new PcgToolsFileInfo()
        {
            Name = file.Name,
            Size = file.Size,
            LastModified = file.LastModified.ToUniversalTime().ToString(),
            Content = new byte[file.Size]
        };

        try
        {
            _ = await file.OpenReadStream(fileInfo.Size).ReadAsync(fileInfo.Content);

            var korgFileReader = new KorgFileReader();
            var memory = korgFileReader.Read(file.Name, fileInfo.Content); // Model type/file type only used when error

            fileInfo.Info = memory.Model.ModelAndVersionAsString;
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            fileInfo.Info = $"Error loading file: {e.Message}";
        }
        finally
        {
            _files.Add(fileInfo);
        }
    }
}