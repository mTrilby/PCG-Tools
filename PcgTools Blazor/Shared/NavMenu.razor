@using PcgTools_Blazor.Menus
@if (_menuList.Any())
{
    @foreach (var menu in _menuList)
    {
        <MudMenu Label="@menu.Label" Dense="@menu.IsDense">
            @if (_menuList.Any())
            {
                @foreach (var item in menu.MenuItems)
                {
                    if (item.IsDivider)
                    {
                        <MudDivider/>
                    }
                    else
                    {
                        if (item.MenuIcon.IsDefined)
                        {
                            <MudMenuItem Disabled="@item.IsDisabled"
                                         OnClick="@OpenFileOnClick"
                                         OnTouch="@OpenFileOnTouch"
                                         IconSize="@item.MenuIcon.Size"
                                         IconColor="@item.MenuIcon.Color"
                                         Icon="@item.MenuIcon.Icon">
                                @item.Name
                            </MudMenuItem>
                        }
                        else
                        {
                            <MudMenuItem Disabled="@item.IsDisabled">
                                @item.Name
                            </MudMenuItem>
                        }
                    }
                }
            }
        </MudMenu>
    }
}

@code {
    [Inject] private IDialogService? DialogService { get; set; }

    private readonly List<Menu> _menuList = new();

    protected override void OnInitialized()
    {
        var menuBuilder = new MenuBuilder();
        _menuList.AddRange(menuBuilder.GetMenu().ToList());
    }

    private async void OpenFileOnClick(MouseEventArgs args)
    {
        var result = await DialogService!.ShowMessageBox(
            "Warning",
            "Deleting can not be undone!",
            yesText: "Delete!", cancelText: "Cancel");
        StateHasChanged();
    }
    private async void OpenFileOnTouch(TouchEventArgs args)
    {
        var result = await DialogService!.ShowMessageBox(
            "Warning",
            "Deleting can not be undone!",
            yesText: "Delete!", cancelText: "Cancel");
        StateHasChanged();
    }
}