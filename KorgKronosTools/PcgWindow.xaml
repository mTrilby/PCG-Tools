<UserControl x:Class="PcgTools.PcgWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:common="clr-namespace:Common.PcgToolsResources;assembly=Common"
             Height="Auto"
             Width="Auto"
             Loaded="Window_Loaded"
             Name="UC"
             mc:Ignorable="d"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             d:DesignHeight="341"
             IsEnabled="True">
    <DockPanel>
        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
            <RadioButton Content="{x:Static common:Strings.ProgramsAsRadioButton}"
                         IsChecked="{Binding Path=ProgramBanksSelected}"
                         IsEnabled="{Binding Path=ProgramsEnabled}" Margin="4" />

            <RadioButton Content="{x:Static common:Strings.Combis}"
                         IsChecked="{Binding Path=CombiBanksSelected}"
                         IsEnabled="{Binding Path=CombisEnabled}"
                         Visibility="{Binding Path=CombiBanksSupported, 
                          Converter={StaticResource BoolToVisibilityConverter}}"
                         Margin="4" />

            <RadioButton Content="{x:Static common:Strings.SetListsAsRadioButton}"
                         IsChecked="{Binding Path=SetListsSelected}"
                         IsEnabled="{Binding Path=SetListSlotsEnabled}"
                         Visibility="{Binding Path=SetListSlotsSupported, 
                          Converter={StaticResource BoolToVisibilityConverter}}"
                         Margin="4" />

            <RadioButton Content="{x:Static common:Strings.WaveSequencesInRadioButton}"
                         IsChecked="{Binding Path=WaveSequenceBanksSelected}"
                         IsEnabled="{Binding Path=WaveSequencesEnabled}"
                         Visibility="{Binding Path=WaveSequencesSupported, Converter={StaticResource BoolToVisibilityConverter}}"
                         Margin="4" />

            <RadioButton Content="{x:Static common:Strings.DrumKitsInRadioButton}"
                         IsChecked="{Binding Path=DrumKitBanksSelected}"
                         IsEnabled="{Binding Path=DrumKitsEnabled}"
                         Visibility="{Binding Path=DrumKitsSupported, 
                         Converter={StaticResource BoolToVisibilityConverter}}"
                         Margin="4" />

            <RadioButton Content="{x:Static common:Strings.DrumPatternsInRadioButton}"
                         IsChecked="{Binding Path=DrumPatternBanksSelected}"
                         IsEnabled="{Binding Path=DrumPatternsEnabled}"
                         Visibility="{Binding Path=DrumPatternsSupported, 
                         Converter={StaticResource BoolToVisibilityConverter}}"
                         Margin="4" />

            <RadioButton Content="{x:Static common:Strings.AllPatchesRadioButton}"
                         IsChecked="{Binding Path=AllPatchesSelected}"
                         Margin="4" />

            <StackPanel Margin="4">
                <StackPanel.Background>
                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                        <GradientStop Color="#FFFF6464" Offset="0" />
                        <GradientStop Color="#FF960000" Offset="1" />
                        <GradientStop Color="Red" Offset="0" />
                    </LinearGradientBrush>
                </StackPanel.Background>
            </StackPanel>
            <Label Content="{x:Static common:Strings.NumberOfPatches}" VerticalAlignment="Center" />
            <Label Content="{Binding NumberOfPatches}" VerticalAlignment="Center" Margin="4, 0, 16, 0" />

            <Label Content="{x:Static common:Strings.NumberOfSelectedPatches}" VerticalAlignment="Center" />
            <Label Content="{Binding NumberOfSelectedPatches}" VerticalAlignment="Center" Margin="4, 0, 0, 0" />
        </StackPanel>

        <WrapPanel DockPanel.Dock="Bottom" Orientation="Horizontal">
            <GroupBox Header="{x:Static common:Strings.CutCopyPasteMode}" Margin="4">
                <WrapPanel>
                    <Button Content="{x:Static common:Strings.Cut}" Margin="4"
                            Command="{Binding Path=CutCommand}" Width="80" />
                    <Button Content="{x:Static common:Strings.Copy}" Margin="4"
                            Command="{Binding Path=CopyCommand}" Width="80" />
                    <Button Content="{x:Static common:Strings.Paste}" Margin="4"
                            Command="{Binding Path=PasteCommand}" Width="80" />
                    <Button Content="{x:Static common:Strings.Exit}" Margin="4"
                            Command="{Binding Path=ExitCopyPasteModeCommand}" Width="80" />
                    <Button Content="{x:Static common:Strings.Recall}" Margin="4"
                            Command="{Binding Path=RecallCommand}" Width="80" />
                </WrapPanel>
            </GroupBox>

            <Button DockPanel.Dock="Bottom" Content="{x:Static common:Strings.GenerateList}" Margin="4"
                    Command="{Binding Path=RunListGeneratorCommand}" Width="128" />
        </WrapPanel>

        <WrapPanel DockPanel.Dock="Bottom" Orientation="Horizontal">
            <Button Content="{x:Static common:Strings.Edit}" Width="80" Margin="4"
                    Command="{Binding Path=EditSelectedItemCommand}" />
            <Button Content="{x:Static common:Strings.Up}" Width="80" Margin="4"
                    Command="{Binding Path=MoveUpCommand}" />
            <Button Content="{x:Static common:Strings.Down}" Width="80" Margin="4"
                    Command="{Binding Path=MoveDownCommand}" />

            <Button Content="{x:Static common:Strings.Clear}" Margin="4"
                    Width="80" Command="{Binding Path=ClearCommand}" />
            <Button Content="{x:Static common:Strings.Compact}" Margin="4"
                    Width="80" Command="{Binding Path=CompactCommand}" />
            <Button Content="{x:Static common:Strings.Sort_menu}" Margin="4"
                    Width="80" Command="{Binding Path=SortCommand}" />
            <Button x:Name="ButtonTimbres" Content="{x:Static common:Strings.Timbres}" Margin="4"
                    Width="80" Command="{Binding Path=ShowTimbresCommand}" />
            <Button x:Name="ButtonAssign" Content="{x:Static common:Strings.Assign}" Margin="4"
                    Command="{Binding Path=AssignCommand}" Width="80">
                <Button.ToolTip>
                    <Label Content="{Binding AssignToolTipText}" />
                </Button.ToolTip>
            </Button>

        </WrapPanel>


        <Grid HorizontalAlignment="Left">
            <ListView HorizontalAlignment="Left" Margin="4" Name="listViewBanks" SelectionMode="Extended"
                      VerticalAlignment="Stretch"
                      SelectionChanged="ListViewBanksSelectionChanged" VerticalContentAlignment="Stretch"
                      GotFocus="ListViewBanksGotFocus"
                      MouseDoubleClick="OnBanksDoubleClick">

                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                        <Setter Property="BorderBrush" Value="LightGray" />
                        <Setter Property="BorderThickness" Value="0,0,0,1" />

                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.View>
                    <GridView AllowsColumnReorder="False">
                        <GridViewColumn Header="{x:Static common:Strings.ID}"
                                        Width="80" DisplayMemberBinding="{Binding Path=Id}" />
                        <GridViewColumn Header="{x:Static common:Strings.ContentType}"
                                        Width="100" DisplayMemberBinding="{Binding Path=Column2}" />
                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>

        <Grid>
            <ListView HorizontalAlignment="Stretch" Margin="3,7,5,1" Name="listViewPatches"
                      VerticalAlignment="Stretch" SelectionMode="Extended"
                      AlternationCount="1" GotFocus="ListViewPatchGotFocus"
                      MouseDoubleClick="OnPatchesMouseDoubleClick" SelectionChanged="ListViewPatchesSelectionChanged"
                      Width="Auto"
                      VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch">
                <ListView.View>
                    <GridView AllowsColumnReorder="False">
                        <GridViewColumn Header="{x:Static common:Strings.PatchType}"
                                        DisplayMemberBinding="{Binding Path=PatchTypeAsString}" />
                        <GridViewColumn Header="{x:Static common:Strings.ID}"
                                        DisplayMemberBinding="{Binding Path=Id}" />
                        <GridViewColumn Header="{x:Static common:Strings.Name}"
                                        DisplayMemberBinding="{Binding Path=Name}" />
                        <GridViewColumn Header="{x:Static common:Strings.Fav}"
                                        DisplayMemberBinding="{Binding Path=Favorite}" />
                        <GridViewColumn Header="{x:Static common:Strings.Category}"
                                        DisplayMemberBinding="{Binding Path=CategoryAsName}" />
                        <GridViewColumn Header="{x:Static common:Strings.SubCategory}"
                                        DisplayMemberBinding="{Binding Path=SubCategoryAsName}" />
                        <GridViewColumn Header="{x:Static common:Strings.Reference}"
                                        DisplayMemberBinding="{Binding Path=Reference}" />
                        <GridViewColumn Header="{x:Static common:Strings.ProgramCombiName}"
                                        DisplayMemberBinding="{Binding Path=ProgramCombiName}" />
                        <GridViewColumn Header="{x:Static common:Strings.ColumnVolume}"
                                        DisplayMemberBinding="{Binding Path=VolumeAsString}" />
                        <GridViewColumn Header="{x:Static common:Strings.Description}"
                                        DisplayMemberBinding="{Binding Path=DescriptionInList}" />
                        <GridViewColumn Header="{x:Static common:Strings.NumberOfReferences}"
                                        DisplayMemberBinding="{Binding Path=NumberOfReferencesAsString}" />
                    </GridView>
                </ListView.View>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                        <Setter Property="BorderBrush" Value="LightGray" />
                        <Setter Property="BorderThickness" Value="0,0,0,1" />
                        <Setter Property="ToolTip" Value="{Binding Path=ToolTip}" />
                    </Style>
                </ListView.ItemContainerStyle>
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <!--Prevent a red line (validation error)-->
                    </ControlTemplate>
                </Validation.ErrorTemplate>
            </ListView>

        </Grid>


    </DockPanel>
</UserControl>